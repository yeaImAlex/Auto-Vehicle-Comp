import cv2 as cv
import numpy as np

# Load Image
img = cv.imread(r"C:\Users\ycwon\Downloads\diy road.jpeg")
cv.imshow('Original', img)

# Calculate the new dimensions after cutting 30% from the top
height = img.shape[0]
width = img.shape[1]
cut_height = int(height * 0.3)

# Crop 30% from the top without resizing
cropped = img[cut_height:height, 0:width]
cv.imshow('Cropped', cropped)

# Create a blank image with the same dimensions as the cropped image
blank = np.zeros(cropped.shape, dtype='uint8')

# Convert the cropped image to grayscale
gray = cv.cvtColor(cropped, cv.COLOR_BGR2GRAY)

# Blur the grayscale image to reduce noise and detail
blur = cv.GaussianBlur(gray, (5, 5), cv.BORDER_DEFAULT)

# Detect edges in the image using the Canny edge detector
canny = cv.Canny(blur, 125, 175)

# Find contours from the edges detected by Canny
contours, hierarchies = cv.findContours(canny, cv.RETR_LIST, cv.CHAIN_APPROX_SIMPLE)
print(f'{len(contours)} contour(s) found!')

# Draw the contours on the blank image
cv.drawContours(blank, contours, -1, (0, 0, 255), 1)
cv.imshow('Contours Drawn', blank)

cv.waitKey(0)
cv.destroyAllWindows()
