// Define ultrasonic sensor pins
const int leftTrigPin = 23;
const int leftEchoPin = 21;
const int rightTrigPin = 4;
const int rightEchoPin = 2;

// Define motor control pins for Motor 1
const int motor1Pin1 = 40;
const int motor1Pin2 = 41;
const int motor1Enable = 44;

// Define motor control pins for Motor 2
const int motor2Pin1 = 42;
const int motor2Pin2 = 43;
const int motor2Enable = 46;

// PID constants
const double Kp = 20;
const double Ki = 0;
const double Kd = 0.005;

//time variable
double dt = 0;
double now;
double last_time = 0;

// PID variables
double integral = 0;
double Output;
double lastError = 0;

// constant speed and test
const double u = 150;
double outputtest;

double getDistance(int trigPin, int echoPin) {
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);

    // Measure the pulse duration on the echo pin
    unsigned long duration = pulseIn(echoPin, HIGH);

    double distance = duration / 58.0;

    return distance;
}

double pidControl(double distanceDifference) {
    double derivative = (distanceDifference - lastError) / dt;
    integral += distanceDifference * dt;
    Output = Kp * distanceDifference + Ki * integral + Kd * derivative;
    lastError = distanceDifference;
    return Output;
}

void adjustMotorSpeed(int motorEnablePin, int motorEnablePin2,  double output) {
    output = constrain(output,-100,100);
    int speed = u - output; // Output directly added to initial speed
    int speed2 = u + output;
    analogWrite(motorEnablePin, speed);
    analogWrite(motorEnablePin2, speed2);
    Serial.println(output);
}


void setup() {
    Serial.begin(9600);

    // Ultrasonic sensor setup
    pinMode(leftTrigPin, OUTPUT);
    pinMode(leftEchoPin, INPUT);
    pinMode(rightTrigPin, OUTPUT);
    pinMode(rightEchoPin, INPUT);

    // Motor control setup
    pinMode(motor1Pin1, OUTPUT);
    pinMode(motor1Pin2, OUTPUT);
    pinMode(motor1Enable, OUTPUT);

    pinMode(motor2Pin1, OUTPUT);
    pinMode(motor2Pin2, OUTPUT);
    pinMode(motor2Enable, OUTPUT);
    //move forward direction
    digitalWrite(motor1Pin1, HIGH);
    digitalWrite(motor1Pin2, LOW);
    digitalWrite(motor2Pin2, HIGH);
    digitalWrite(motor2Pin1, LOW);
}

void loop() {
    now = millis();
    dt = now - last_time;
    last_time = now;
    double leftDistance = getDistance(leftTrigPin, leftEchoPin);
    double rightDistance = getDistance(rightTrigPin, rightEchoPin);

    double distanceDifference = leftDistance - rightDistance;

    Serial.print("Distance Difference: ");
    Serial.println(distanceDifference);

    // speed controller through pid
    adjustMotorSpeed(motor1Enable,motor2Enable, pidControl(distanceDifference));

  // Delay for stability
    delay(10);
}
