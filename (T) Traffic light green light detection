import cv2
import numpy as np

# Open the video file or use a webcam by passing 0
cap = cv2.VideoCapture(r"C:\path\to\your\video.mp4")  # Replace with your video path or use 0 for webcam

while True:
    ret, frame = cap.read()
    
    if not ret:
        break

    # Convert the frame to HSV color space
    hsv_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)

    # Getting Green Only
    lower_green = np.array([35, 100, 100])
    upper_green = np.array([85, 255, 255])

    # Create a mask for the green color
    greenMask = cv2.inRange(hsv_frame, lower_green, upper_green)
    greenOnly = cv2.bitwise_and(frame, frame, mask=greenMask)

    # Convert the result to grayscale
    gray_frame = cv2.cvtColor(greenOnly, cv2.COLOR_BGR2GRAY)

    # Blur the grayscale image
    blurred_frame = cv2.GaussianBlur(gray_frame, (5, 5), 8)

    # Detect circles in the blurred grayscale image
    circles = cv2.HoughCircles(blurred_frame, cv2.HOUGH_GRADIENT, dp=1, minDist=100, param1=50, param2=30, minRadius=10, maxRadius=1000)

    if circles is not None:
        circles = np.uint16(np.around(circles))
        for i in circles[0, :]:
            cv2.circle(frame, (i[0], i[1]), i[2], (0, 0, 255), 2)

    # Display the processed frame
    cv2.imshow("Detected Green Circles", frame)

    # Exit if the user presses 'q'
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the video capture object and close all windows
cap.release()
cv2.destroyAllWindows()
